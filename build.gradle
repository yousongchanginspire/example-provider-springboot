plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'org.openapi.generator' version '5.4.0'
	id 'java'
  id "au.com.dius.pact" version "4.1.39"
  id 'eclipse'
}
def springFoxVersion = '3.0.0'
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: springFoxVersion
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: springFoxVersion
    compileOnly "org.openapitools:jackson-databind-nullable:0.2.2"
	testCompile 'au.com.dius.pact.provider:junit:4.1.39'
	testCompile 'au.com.dius.pact.provider:junit5:4.1.39'
	testCompile 'au.com.dius.pact.provider:spring:4.1.39'

	runtimeOnly 'com.h2database:h2'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}
compileJava.dependsOn tasks.openApiGenerate

openApiGenerate {
    generatorName = "spring"

    inputSpec = "$projectDir/oas/swagger.yml".toString()
    outputDir = "$projectDir".toString()

    apiPackage = "com.example.springboot"
    modelPackage = "com.example.springboot"

    globalProperties = [
            modelDocs      : "false",
            models         : "",
            apis           : "",
            supportingFiles: "false"
    ]

    configOptions = [
            performBeanValidation         : "true",
            useTags                       : "true",
            basePackage                   : "com.example.sprintboot",
            configPackage                 : "com.example.sprintboot",
            title                         : rootProject.name,
            java8                         : "false",
            dateLibrary                   : "java11",
            artifactId                    : rootProject.name,
            interfaceOnly                 : "true",
            additionalModelTypeAnnotations: "@lombok.Builder;" +
                    "@lombok.NoArgsConstructor;" +
                    "@lombok.AllArgsConstructor;" +
                    "@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL);" +
                    "@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown=true);"
    ]
}
test {
	useJUnitPlatform()

	// These properties need to be set on the test JVM process
	systemProperty("pact.provider.version", System.getenv("GIT_COMMIT") == null ? "" : System.getenv("GIT_COMMIT"))
	systemProperty("pact.provider.tag", System.getenv("GIT_BRANCH") == null ? "" : System.getenv("GIT_BRANCH"))
	systemProperty("pact.provider.branch", System.getenv("GIT_BRANCH") == null ? "" : System.getenv("GIT_BRANCH"))
	systemProperty("pactbroker.consumerversionselectors.rawjson", "[{\"mainBranch\":true}]")
	systemProperty("pact.verifier.publishResults", System.getenv("PACT_BROKER_PUBLISH_VERIFICATION_RESULTS") == null ? "false" : "true")
}